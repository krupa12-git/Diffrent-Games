def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_win(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True
    for col in range(3):
        if all(row[col] == player for row in board):
            return True
    if all(board[i][i] == player for i in range(3)):
        return True
    if all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_full(board):
    return all(cell in ['X', 'O'] for row in board for cell in row)

def play_game():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current = "X"

    while True:
        print_board(board)
        print(f"Player {current}'s turn.")
        row = int(input("Enter row (0-2): "))
        col = int(input("Enter col (0-2): "))

        if board[row][col] != " ":
            print("Cell already taken. Try again.")
            continue

        board[row][col] = current
        if check_win(board, current):
            print_board(board)
            print(f"Player {current} wins!")
            break
        elif is_full(board):
            print_board(board)
            print("It's a tie!")
            break
        current = "O" if current == "X" else "X"

if __name__ == "__main__":
    play_game()
